set.seed(4)
for(s in 1 :NS){
nu <- 7
bvdelta <- sqrt(nu) * gamma(1/2 * (nu - 1))/sqrt(pi)/gamma(1/2 * nu) *
alpha/sqrt(1 + alpha^2)
omega <- 1/sqrt((nu/(nu-2) - bvdelta^2))
xi<- -omega * bvdelta
error.st[,s] <- rst(NT, xi = xi, omega = omega, alpha, nu)
}
y.st <- matrix(0,NT,NS)
for(t in 2: NT){
y.st[t,] <- B1.st %*% raindata[t - 1,] +
error.st[t,] * (b0.st + b1.st * mean(raindata[t - 1,]))
y.st[t,] <- ifelse(y.st[t,] > ut[t,], y.st[t,], 0)
}
par(mfrow=c(3,3))
for (i in 1:8){
plot.ts(raindata[,i],
ylim = c(0, 0.1 + max(c(raindata[,i],round(y.st[,i])))))
lines(y.st[,i],col='grey')
}
qqplot(c(y.st), c(raindata))
abline(0,1)
load(here("results", "estimation.cov.VAR1.RData"))
#load(here("results", "rain.long.RData"))
#raindata <- matrix(rain.long$rain[1:230400],28800,8)
load(here("results", "rain.15min.df.RData"))
raindata <- matrix(rain.15min.df$rain[1:7680],960,8)
NT <- nrow(raindata)
NS <- ncol(raindata)
sigma21.st <- results.VAR1$sigma21
beta1.st <- results.VAR1$beta1
distance <- as.matrix(dist(coord[,2:3], diag = TRUE, upper = TRUE))
# The covariance matrix under model with nugget effect
B1.st <- sigma21.st ^ 2 * exp(- (distance/beta1.st)^2)
alpha <- results.VAR1$alpha
b0.st <- results.VAR1$b0-.3
b1.st <- results.VAR1$b1-.3
ut <- results.VAR1$ut
nu <- results.VAR1$nu
error.st <- matrix(0,NT,NS)
set.seed(4)
for(s in 1 :NS){
nu <- 7
bvdelta <- sqrt(nu) * gamma(1/2 * (nu - 1))/sqrt(pi)/gamma(1/2 * nu) *
alpha/sqrt(1 + alpha^2)
omega <- 1/sqrt((nu/(nu-2) - bvdelta^2))
xi<- -omega * bvdelta
error.st[,s] <- rst(NT, xi = xi, omega = omega, alpha, nu)
}
y.st <- matrix(0,NT,NS)
for(t in 2: NT){
y.st[t,] <- B1.st %*% raindata[t - 1,] +
error.st[t,] * (b0.st + b1.st * mean(raindata[t - 1,]))
y.st[t,] <- ifelse(y.st[t,] > ut[t,], y.st[t,], 0)
}
par(mfrow=c(3,3))
for (i in 1:8){
plot.ts(raindata[,i],
ylim = c(0, 0.1 + max(c(raindata[,i],round(y.st[,i])))))
lines(y.st[,i],col='grey')
}
qqplot(c(y.st), c(raindata))
abline(0,1)
NT <- nrow(raindata)
NS <- ncol(raindata)
init <- c()
#init[1] <- 0.1/(1/NS-0.1) #variance
init[1] <- 0.1
init[2] <- 0.1 #spatial range
init[3] <- 0.5
init[4] <- 0.5
init[5] <- 3 #positive skewness alpha
#cov.optim.rslt.st <- optim(par=init,fn = varlik.sp.var1.st,
#                    data = raindata, coord = coord, ut = ut, nu = 4,
#                    hessian = TRUE)
nu.best <- 7
cov.optim.rslt.st <- lbfgs(x0=init,fn = varlik.sp.var1.st,
lower = c(0,0,0,0,-10),upper = c(sqrt(1/8),10,10,10,100),
data = raindata, coord = coord, ut = ut, nu = nu.best)
cov.optim.rslt.st
NT <- nrow(raindata)
NS <- ncol(raindata)
init <- c()
#init[1] <- 0.1/(1/NS-0.1) #variance
init[1] <- 0.1
init[2] <- 0.1 #spatial range
init[3] <- 0.5
init[4] <- 0.5
init[5] <- 3 #positive skewness alpha
#cov.optim.rslt.st <- optim(par=init,fn = varlik.sp.var1.st,
#                    data = raindata, coord = coord, ut = ut, nu = 4,
#                    hessian = TRUE)
nu.best <- 7
cov.optim.rslt.st <- lbfgs(x0=init,fn = varlik.sp.var1.st,
lower = c(0,0,0,0,-10),upper = c(1,10,10,10,100),
data = raindata, coord = coord, ut = ut, nu = nu.best)
cov.optim.rslt.st
NT <- nrow(raindata)
NS <- ncol(raindata)
init <- c()
#init[1] <- 0.1/(1/NS-0.1) #variance
init[1] <- 0.1
init[2] <- 0.1 #spatial range
init[3] <- 0.5
init[4] <- 0.5
init[5] <- 3 #positive skewness alpha
#cov.optim.rslt.st <- optim(par=init,fn = varlik.sp.var1.st,
#                    data = raindata, coord = coord, ut = ut, nu = 4,
#                    hessian = TRUE)
nu.best <- 7
cov.optim.rslt.st <- lbfgs(x0=init,fn = varlik.sp.var1.st,
lower = c(0,0,0,0,-10),upper = c(sqrt(1/8),10,10,10,100),
data = raindata, coord = coord, ut = ut, nu = nu.best)
cov.optim.rslt.st
NT <- nrow(raindata)
NS <- ncol(raindata)
init <- c()
#init[1] <- 0.1/(1/NS-0.1) #variance
init[1] <- 0.1
init[2] <- 0.1 #spatial range
init[3] <- 0.5
init[4] <- 0.5
init[5] <- 3 #positive skewness alpha
#cov.optim.rslt.st <- optim(par=init,fn = varlik.sp.var1.st,
#                    data = raindata, coord = coord, ut = ut, nu = 4,
#                    hessian = TRUE)
nu.best <- 7
cov.optim.rslt.st <- lbfgs(x0=init,fn = varlik.sp.var1.st,
lower = c(0,0,0,0,-10),upper = c(sqrt(1/9),10,10,10,100),
data = raindata, coord = coord, ut = ut, nu = nu.best)
cov.optim.rslt.st
NT <- nrow(raindata)
NS <- ncol(raindata)
init <- c()
#init[1] <- 0.1/(1/NS-0.1) #variance
init[1] <- 0.1
init[2] <- 0.1 #spatial range
init[3] <- 0.5
init[4] <- 0.5
init[5] <- 3 #positive skewness alpha
#cov.optim.rslt.st <- optim(par=init,fn = varlik.sp.var1.st,
#                    data = raindata, coord = coord, ut = ut, nu = 4,
#                    hessian = TRUE)
nu.best <- 7
cov.optim.rslt.st <- lbfgs(x0=init,fn = varlik.sp.var1.st,
lower = c(0,0,0,0,-10),upper = c(sqrt(1/5),10,10,10,100),
data = raindata, coord = coord, ut = ut, nu = nu.best)
cov.optim.rslt.st
NT <- nrow(raindata)
NS <- ncol(raindata)
init <- c()
#init[1] <- 0.1/(1/NS-0.1) #variance
init[1] <- 0.1
init[2] <- 0.1 #spatial range
init[3] <- 0.5
init[4] <- 0.5
init[5] <- 3 #positive skewness alpha
#cov.optim.rslt.st <- optim(par=init,fn = varlik.sp.var1.st,
#                    data = raindata, coord = coord, ut = ut, nu = 4,
#                    hessian = TRUE)
nu.best <- 7
cov.optim.rslt.st <- neldermead(x0=init,fn = varlik.sp.var1.st,
lower = c(0,0,0,0,-10),upper = c(sqrt(1/5),10,10,10,100),
data = raindata, coord = coord, ut = ut, nu = nu.best)
cov.optim.rslt.st
NT <- nrow(raindata)
NS <- ncol(raindata)
init <- c()
#init[1] <- 0.1/(1/NS-0.1) #variance
init[1] <- 3
init[2] <- 1 #spatial range
init[3] <- 1
init[4] <- 1
init[5] <- 10 #positive skewness alpha
#cov.optim.rslt.st <- optim(par=init,fn = varlik.sp.var1.st,
#                    data = raindata, coord = coord, ut = ut, nu = 4,
#                    hessian = TRUE)
nu.best <- 7
cov.optim.rslt.st <- neldermead(x0=init,fn = varlik.sp.var1.st,
lower = c(0,0,0,0,-10),upper = c(sqrt(1/5),10,10,10,100),
data = raindata, coord = coord, ut = ut, nu = nu.best)
NT <- nrow(raindata)
NS <- ncol(raindata)
init <- c()
#init[1] <- 0.1/(1/NS-0.1) #variance
init[1] <- 0.3
init[2] <- 1 #spatial range
init[3] <- 1
init[4] <- 1
init[5] <- 10 #positive skewness alpha
#cov.optim.rslt.st <- optim(par=init,fn = varlik.sp.var1.st,
#                    data = raindata, coord = coord, ut = ut, nu = 4,
#                    hessian = TRUE)
nu.best <- 7
cov.optim.rslt.st <- neldermead(x0=init,fn = varlik.sp.var1.st,
lower = c(0,0,0,0,-10),upper = c(sqrt(1/5),10,10,10,100),
data = raindata, coord = coord, ut = ut, nu = nu.best)
cov.optim.rslt.st
NT <- nrow(raindata)
NS <- ncol(raindata)
init <- c()
#init[1] <- 0.1/(1/NS-0.1) #variance
init[1] <- 0.3
init[2] <- 1 #spatial range
init[3] <- 1
init[4] <- 1
init[5] <- 10 #positive skewness alpha
#cov.optim.rslt.st <- optim(par=init,fn = varlik.sp.var1.st,
#                    data = raindata, coord = coord, ut = ut, nu = 4,
#                    hessian = TRUE)
nu.best <- 3
cov.optim.rslt.st <- neldermead(x0=init,fn = varlik.sp.var1.st,
lower = c(0,0,0,0,-10),upper = c(sqrt(1/5),10,10,10,100),
data = raindata, coord = coord, ut = ut, nu = nu.best)
cov.optim.rslt.st
NT <- nrow(raindata)
NS <- ncol(raindata)
init <- c()
#init[1] <- 0.1/(1/NS-0.1) #variance
init[1] <- 0.3
init[2] <- 1 #spatial range
init[3] <- 1
init[4] <- 1
init[5] <- 10 #positive skewness alpha
#cov.optim.rslt.st <- optim(par=init,fn = varlik.sp.var1.st,
#                    data = raindata, coord = coord, ut = ut, nu = 4,
#                    hessian = TRUE)
nu.best <- 7
cov.optim.rslt.st <- neldermead(x0=init,fn = varlik.sp.var1.st,
lower = c(0,0,0,0,-10),upper = c(sqrt(1/5),10,10,10,100),
data = raindata, coord = coord, ut = ut, nu = nu.best)
cov.optim.rslt.st
results.VAR1 <- list(sigma21 = cov.optim.rslt.st$par[1], beta1 = cov.optim.rslt.st$par[2], b0 = cov.optim.rslt.st$par[3],b1 = cov.optim.rslt.st$par[4],alpha = cov.optim.rslt.st$par[5],nu =nu.best, ut = ut)
save(results.VAR1,
file = here("results", "estimation.cov.VAR1.RData"))
results.VAR1.norm <- list(sigma21 = cov.optim.rslt.norm$par[1], beta1 = cov.optim.rslt.norm$par[2], b0 = cov.optim.rslt.norm$par[3],b1 = cov.optim.rslt.norm$par[4], ut=ut)
save(results.VAR1.norm,
file = here("results", "estimation.cov.VAR1.norm.RData"))
load(here("results", "estimation.cov.VAR1.RData"))
#load(here("results", "rain.long.RData"))
#raindata <- matrix(rain.long$rain[1:230400],28800,8)
load(here("results", "rain.15min.df.RData"))
raindata <- matrix(rain.15min.df$rain[1:7680],960,8)
NT <- nrow(raindata)
NS <- ncol(raindata)
sigma21.st <- results.VAR1$sigma21
beta1.st <- results.VAR1$beta1
distance <- as.matrix(dist(coord[,2:3], diag = TRUE, upper = TRUE))
# The covariance matrix under model with nugget effect
B1.st <- sigma21.st ^ 2 * exp(- (distance/beta1.st)^2)
alpha <- results.VAR1$alpha
b0.st <- results.VAR1$b0-.3
b1.st <- results.VAR1$b1-.3
ut <- results.VAR1$ut
nu <- results.VAR1$nu
error.st <- matrix(0,NT,NS)
set.seed(4)
for(s in 1 :NS){
nu <- 7
bvdelta <- sqrt(nu) * gamma(1/2 * (nu - 1))/sqrt(pi)/gamma(1/2 * nu) *
alpha/sqrt(1 + alpha^2)
omega <- 1/sqrt((nu/(nu-2) - bvdelta^2))
xi<- -omega * bvdelta
error.st[,s] <- rst(NT, xi = xi, omega = omega, alpha, nu)
}
y.st <- matrix(0,NT,NS)
for(t in 2: NT){
y.st[t,] <- B1.st %*% raindata[t - 1,] +
error.st[t,] * (b0.st + b1.st * mean(raindata[t - 1,]))
y.st[t,] <- ifelse(y.st[t,] > ut[t,], y.st[t,], 0)
}
par(mfrow=c(3,3))
for (i in 1:8){
plot.ts(raindata[,i],
ylim = c(0, 0.1 + max(c(raindata[,i],round(y.st[,i])))))
lines(y.st[,i],col='grey')
}
qqplot(c(y.st), c(raindata))
abline(0,1)
y.norm <- matrix(0,NT,NS)
for(t in 2: NT){
y.norm[t,] <- B1.norm %*% raindata[t - 1,] +
error.norm[t,] * (b0.norm + b1.norm *(raindata[t-1,]))
y.norm[t,] <- ifelse(y.norm[t,] > ut[t,], y.norm[t,], 0)
}
par(mfrow=c(3,3))
for (i in 1:8){
plot.ts(raindata[,i],
ylim = c(0, 0.1 + max(c(raindata[,i],round(y.st[,i])))))
lines(y.st[,i],col='grey')
}
qqplot(c(y.st), c(raindata))
abline(0,1)
y.st <- matrix(0,NT,NS)
for(t in 2: NT){
y.st[t,] <- B1.st %*% raindata[t - 1,] +
error.st[t,] * (b0.st + b1.st * (raindata[t - 1,]))
y.st[t,] <- ifelse(y.st[t,] > ut[t,], y.st[t,], 0)
}
par(mfrow=c(3,3))
for (i in 1:8){
plot.ts(raindata[,i],
ylim = c(0, 0.1 + max(c(raindata[,i],round(y.st[,i])))))
lines(y.st[,i],col='grey')
}
qqplot(c(y.st), c(raindata))
abline(0,1)
b0.st
b1.st
load(here("results", "estimation.cov.VAR1.RData"))
#load(here("results", "rain.long.RData"))
#raindata <- matrix(rain.long$rain[1:230400],28800,8)
load(here("results", "rain.15min.df.RData"))
raindata <- matrix(rain.15min.df$rain[1:7680],960,8)
NT <- nrow(raindata)
NS <- ncol(raindata)
sigma21.st <- results.VAR1$sigma21
beta1.st <- results.VAR1$beta1
distance <- as.matrix(dist(coord[,2:3], diag = TRUE, upper = TRUE))
# The covariance matrix under model with nugget effect
B1.st <- sigma21.st ^ 2 * exp(- (distance/beta1.st)^2)
alpha <- results.VAR1$alpha
b0.st <- results.VAR1$b0
b1.st <- results.VAR1$b1
ut <- results.VAR1$ut
nu <- results.VAR1$nu
error.st <- matrix(0,NT,NS)
set.seed(4)
for(s in 1 :NS){
nu <- 7
bvdelta <- sqrt(nu) * gamma(1/2 * (nu - 1))/sqrt(pi)/gamma(1/2 * nu) *
alpha/sqrt(1 + alpha^2)
omega <- 1/sqrt((nu/(nu-2) - bvdelta^2))
xi<- -omega * bvdelta
error.st[,s] <- rst(NT, xi = xi, omega = omega, alpha, nu)
}
y.st <- matrix(0,NT,NS)
for(t in 2: NT){
y.st[t,] <- B1.st %*% raindata[t - 1,] +
error.st[t,] * (b0.st + b1.st * mean(raindata[t - 1,]))
y.st[t,] <- ifelse(y.st[t,] > ut[t,], y.st[t,], 0)
}
par(mfrow=c(3,3))
for (i in 1:8){
plot.ts(raindata[,i],
ylim = c(0, 0.1 + max(c(raindata[,i],round(y.st[,i])))))
lines(y.st[,i],col='grey')
}
qqplot(c(y.st), c(raindata))
abline(0,1)
load(here("results", "estimation.cov.VAR1.RData"))
#load(here("results", "rain.long.RData"))
#raindata <- matrix(rain.long$rain[1:230400],28800,8)
load(here("results", "rain.15min.df.RData"))
raindata <- matrix(rain.15min.df$rain[1:7680],960,8)
NT <- nrow(raindata)
NS <- ncol(raindata)
sigma21.st <- results.VAR1$sigma21/2
beta1.st <- results.VAR1$beta1
distance <- as.matrix(dist(coord[,2:3], diag = TRUE, upper = TRUE))
# The covariance matrix under model with nugget effect
B1.st <- sigma21.st ^ 2 * exp(- (distance/beta1.st)^2)
alpha <- results.VAR1$alpha
b0.st <- results.VAR1$b0
b1.st <- results.VAR1$b1
ut <- results.VAR1$ut
nu <- results.VAR1$nu
error.st <- matrix(0,NT,NS)
set.seed(4)
for(s in 1 :NS){
nu <- 7
bvdelta <- sqrt(nu) * gamma(1/2 * (nu - 1))/sqrt(pi)/gamma(1/2 * nu) *
alpha/sqrt(1 + alpha^2)
omega <- 1/sqrt((nu/(nu-2) - bvdelta^2))
xi<- -omega * bvdelta
error.st[,s] <- rst(NT, xi = xi, omega = omega, alpha, nu)
}
y.st <- matrix(0,NT,NS)
for(t in 2: NT){
y.st[t,] <- B1.st %*% raindata[t - 1,] +
error.st[t,] * (b0.st + b1.st * mean(raindata[t - 1,]))
y.st[t,] <- ifelse(y.st[t,] > ut[t,], y.st[t,], 0)
}
par(mfrow=c(3,3))
for (i in 1:8){
plot.ts(raindata[,i],
ylim = c(0, 0.1 + max(c(raindata[,i],round(y.st[,i])))))
lines(y.st[,i],col='grey')
}
qqplot(c(y.st), c(raindata))
abline(0,1)
NT <- nrow(raindata)
NS <- ncol(raindata)
init <- c()
#init[1] <- 0.1/(1/NS-0.1) #variance
init[1] <- 0.3
init[2] <- 1 #spatial range
init[3] <- 1
init[4] <- 1
init[5] <- 10 #positive skewness alpha
#cov.optim.rslt.st <- optim(par=init,fn = varlik.sp.var1.st,
#                    data = raindata, coord = coord, ut = ut, nu = 4,
#                    hessian = TRUE)
nu.best <- 7
cov.optim.rslt.st <- neldermead(x0=init,fn = varlik.sp.var1.st,
lower = c(0,0,0,0,-10),upper = c(sqrt(1/5),10,10,10,100),
data = raindata, coord = coord, ut = ut, nu = nu.best)
cov.optim.rslt.st
NT <- nrow(raindata)
NS <- ncol(raindata)
init <- c()
#init[1] <- 0.1/(1/NS-0.1) #variance
init[1] <- 0.3
init[2] <- 1 #spatial range
init[3] <- 1
init[4] <- 1
init[5] <- 10 #positive skewness alpha
#cov.optim.rslt.st <- optim(par=init,fn = varlik.sp.var1.st,
#                    data = raindata, coord = coord, ut = ut, nu = 4,
#                    hessian = TRUE)
nu.best <- 7
cov.optim.rslt.st <- lbfgs(x0=init,fn = varlik.sp.var1.st,
lower = c(0,0,0,0,-10),upper = c(sqrt(1/8),10,10,10,100),
data = raindata, coord = coord, ut = ut, nu = nu.best)
cov.optim.rslt.st
NT <- nrow(raindata)
NS <- ncol(raindata)
init <- c()
#init[1] <- 0.1/(1/NS-0.1) #variance
init[1] <- 0.3
init[2] <- 1 #spatial range
init[3] <- 0.5
init[4] <- 0.5
init[5] <- 10 #positive skewness alpha
#cov.optim.rslt.st <- optim(par=init,fn = varlik.sp.var1.st,
#                    data = raindata, coord = coord, ut = ut, nu = 4,
#                    hessian = TRUE)
nu.best <- 7
cov.optim.rslt.st <- lbfgs(x0=init,fn = varlik.sp.var1.st,
lower = c(0,0,0,0,-10),upper = c(sqrt(1/8),100,0.5,0.5,100),
data = raindata, coord = coord, ut = ut, nu = nu.best)
cov.optim.rslt.st
NT <- nrow(raindata)
NS <- ncol(raindata)
init <- c()
#init[1] <- 0.1/(1/NS-0.1) #variance
init[1] <- 0.3
init[2] <- 1 #spatial range
init[3] <- 0.5
init[4] <- 0.5
init[5] <- 10 #positive skewness alpha
#cov.optim.rslt.st <- optim(par=init,fn = varlik.sp.var1.st,
#                    data = raindata, coord = coord, ut = ut, nu = 4,
#                    hessian = TRUE)
nu.best <- 7
cov.optim.rslt.st <- lbfgs(x0=init,fn = varlik.sp.var1.st,
lower = c(0,0,0,0,-10),upper = c(sqrt(1/8),10,10,10,100),
data = raindata, coord = coord, ut = matrix(1,NT,NS), nu = nu.best)
cov.optim.rslt.st
NT <- nrow(raindata)
NS <- ncol(raindata)
init <- c()
#init[1] <- 0.1/(1/NS-0.1) #variance
init[1] <- 0.3
init[2] <- 1 #spatial range
init[3] <- 0.5
init[4] <- 0.5
init[5] <- 10 #positive skewness alpha
#cov.optim.rslt.st <- optim(par=init,fn = varlik.sp.var1.st,
#                    data = raindata, coord = coord, ut = ut, nu = 4,
#                    hessian = TRUE)
nu.best <- 7
cov.optim.rslt.st <- lbfgs(x0=init,fn = varlik.sp.var1.st,
lower = c(0,0,0,0,-10),upper = c(1,10,10,10,100),
data = raindata, coord = coord, ut = matrix(1,NT,NS), nu = nu.best)
cov.optim.rslt.st
NT <- nrow(raindata)
NS <- ncol(raindata)
init <- c()
#init[1] <- 0.1/(1/NS-0.1) #variance
init[1] <- 0.3
init[2] <- 1 #spatial range
init[3] <- 1
init[4] <- 1
init[5] <- 10 #positive skewness alpha
#cov.optim.rslt.st <- optim(par=init,fn = varlik.sp.var1.st,
#                    data = raindata, coord = coord, ut = ut, nu = 4,
#                    hessian = TRUE)
nu.best <- 7
cov.optim.rslt.st <- neldermead(x0=init,fn = varlik.sp.var1.st,
lower = c(0,0,0,0,-10),upper = c(sqrt(1/16),10,10,10,100),
data = raindata, coord = coord, ut = ut, nu = nu.best)
NT <- nrow(raindata)
NS <- ncol(raindata)
init <- c()
#init[1] <- 0.1/(1/NS-0.1) #variance
init[1] <- 0.1
init[2] <- 1 #spatial range
init[3] <- 1
init[4] <- 1
init[5] <- 10 #positive skewness alpha
#cov.optim.rslt.st <- optim(par=init,fn = varlik.sp.var1.st,
#                    data = raindata, coord = coord, ut = ut, nu = 4,
#                    hessian = TRUE)
nu.best <- 7
cov.optim.rslt.st <- neldermead(x0=init,fn = varlik.sp.var1.st,
lower = c(0,0,0,0,-10),upper = c(sqrt(1/16),10,10,10,100),
data = raindata, coord = coord, ut = ut, nu = nu.best)
cov.optim.rslt.st
p1
p2
