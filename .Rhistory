library(geoR)
library(sn)
library(cowplot)
quan.app<-quan.app.norm<-matrix(0,niters,10000)
for (j in 1 :niters){
quan.app[j,]<- quantile(app.sim[,,j],1:10000/10000)
quan.app.norm[j,]<- quantile(app.sim.norm[,,j],1:10000/10000)
quan.app.true<- quantile(raindata,1:10000/10000)
}
quan.df.app<-data.frame(x=rep(quan.app.true,3),median=c(apply(quan.app,2,sort)[26,],apply(quan.app.norm,2,sort)[26,],quan.app.true),lower=c(apply(quan.app,2,sort)[2,],apply(quan.app.norm,2,sort)[2,],rep(NA,10000)),upper=c(apply(quan.app,2,sort)[49,],apply(quan.app.norm,2,sort)[49,],rep(NA,10000)),Type=c(rep("Skew-t",10000),rep("Gaussian",10000),rep("Truth",10000)))
ggsave(filename=here("results","rainsim.pdf"),device='pdf', plot=rain.sim.plot,width = 8, height = 10)
combine_plot<-plot_grid( rain.sim.plot, rain.sim.plot.norm, align='h',rel_widths = 1.2, rel_heights = 1)
rain.sims <- rain.long[-(1:8)*28801,]
rain.sims$rain1 <- melt(y.st)$value
rain.sim.plot<-ggplot(rain.sims,aes(x=dt,group=sites))+
geom_line(aes(y = rain,color='Observation'),alpha=0.6)+
geom_line(aes(y = rain1,color='Simulation'),alpha=0.6) +
facet_grid(sites ~ .) + xlab("Data and Time") + ylab("Amount of Rain")+
ggtitle("(a) Simulation vs Observation" )
rain.sim.plot
rain.sims <- rain.long[-(1:8)*28801,]
rain.sims$rain1 <- melt(y.norm)$value
rain.sim.plot.norm<-ggplot(rain.sims,aes(x=dt,group=sites))+
geom_line(aes(y = rain,color='Observation'),alpha=0.6)+
geom_line(aes(y = rain1,color='Simulation'),alpha=0.6) +
facet_grid(sites ~ .) + xlab("Data and Time") + ylab("Amount of Rain")+
ggtitle("(b) Simulation vs Observation--Guassian Error" )
rain.sim.plot.norm
p1 <- ggplot(data = quan.df.app, aes(x=x, y=median, colour=Type)) +
geom_line(size=0.8) + ylab("Empirical Quantiles (count/epoch)") + xlab("Sample Quantiles (count/epoch)") +
ggtitle("The QQ-plot of two models: Obervation vs Simulation") +
scale_y_continuous()+scale_x_continuous()+
geom_ribbon(aes(ymin=lower, ymax=upper,fill=Type), linetype=2, alpha=0.3) +
scale_color_brewer(palette = "Dark2") +
scale_fill_brewer(palette = "Dark2")
p1
p2 <- ggplot(spat.dep,aes(group=variable,fill=variable)) +
geom_histogram(aes(value),binwidth=.5,position = position_dodge())+
xlab("Number of simutaneously rainy locations")+
ylab("Count")+
ggtitle("Histogram of Simutaneous Rain")
p2
p.cons <- ggplot(data = quan.cons, aes(x=x, y=median, colour=Type)) +
geom_line(size=0.8) + ylab("Empirical Quantiles (count/epoch)") + xlab("Sample Quantiles (count/epoch)") +
ggtitle("The QQ-plot of two models: Obervation vs Simulation") +
scale_y_continuous()+scale_x_continuous()+
geom_ribbon(aes(ymin=lower, ymax=upper,fill=Type), linetype=2, alpha=0.3) +
scale_color_brewer(palette = "Dark2") +
scale_fill_brewer(palette = "Dark2")
p.cons
par(mfrow=c(1,2))
plot(density(condi.prob[3,]),main='Wet|Dry',xlab="Transition probability",xlim=c(0,0.5),lwd=2,col=2)
abline(v=condi.prob.real[3],col=1,lwd=2,lty=2)
legend("topright",c("Observation","Simulation"),col=c(1,2),lwd=2)
plot(density(1-condi.prob[1,]),main='Wet|Wet',xlab="Transition probability",xlim=c(0.5,1),lwd=2,col=2)
abline(v=1-condi.prob.real[1],col=1,lwd=2,lty=2)
legend("topleft",c("Observation","Simulation"),col=c(1,2),lwd=2)
ggsave(filename=here("results","rainsim.pdf"),device='pdf', plot=rain.sim.plot,width = 8, height = 10)
ggsave(filename=here("results","rainsim.norm.pdf"),device='pdf', plot=rain.sim.plot.norm,width = 8, height = 10)
combine_plot<-plot_grid( rain.sim.plot, rain.sim.plot.norm, align='h',rel_widths = 1.2, rel_heights = 1)
ggsave(filename=here("results","sim_compare.pdf"),device='pdf', plot=combine_plot, width = 12, height = 10)
ggsave(filename=here("results","qqapp.pdf"),device='pdf', plot=p1, width = 6, height = 5)
ggsave(filename=here("results","spatial.pdf"),device='pdf', plot=p2,width = 8, height = 6)
pdf("condidry.pdf",width=8, height=6)
par(mfrow=c(1,2))
plot(density(condi.prob[3,]),main='Wet|Dry',xlab="Transition probability",xlim=c(0,0.5),lwd=2,col=2)
abline(v=condi.prob.real[3],col=1,lwd=2,lty=2)
legend("topright",c("Observation","Simulation"),col=c(1,2),lwd=2)
plot(density(1-condi.prob[1,]),main='Wet|Wet',xlab="Transition probability",xlim=c(0.5,1),lwd=2,col=2)
abline(v=1-condi.prob.real[1],col=1,lwd=2,lty=2)
legend("topleft",c("Observation","Simulation"),col=c(1,2),lwd=2)
dev.off()
combine_plot<-plot_grid( rain.sim.plot, rain.sim.plot.norm, align='h',rel_widths = 1.2, rel_heights = 1)
ggsave(filename=here("results","sim_compare.pdf"),device='pdf', plot=combine_plot, width = 12, height = 10)
ggsave(filename=here("results","qqapp.pdf"),device='pdf', plot=p1, width = 6, height = 5)
ggsave(filename=here("results","spatial.pdf"),device='pdf', plot=p2,width = 6, height = 5)
pdf("condidry.pdf",width=12, height=10)
par(mfrow=c(1,2))
plot(density(condi.prob[3,]),main='Wet|Dry',xlab="Transition probability",xlim=c(0,0.5),lwd=2,col=2)
abline(v=condi.prob.real[3],col=1,lwd=2,lty=2)
legend("topright",c("Observation","Simulation"),col=c(1,2),lwd=2)
plot(density(1-condi.prob[1,]),main='Wet|Wet',xlab="Transition probability",xlim=c(0.5,1),lwd=2,col=2)
abline(v=1-condi.prob.real[1],col=1,lwd=2,lty=2)
legend("topleft",c("Observation","Simulation"),col=c(1,2),lwd=2)
dev.off()
ggsave(filename=here("results","ut.pdf"), plot=utfit, width = 6, height = 5)
rain.ut <- rain.long[-(1:8)*28801,]
rain.ut$rain <- melt(ut)$value
utfit<-ggplot(rain.ut,aes(y=rain,x=dt,group=sites,colour=sites))+
geom_line()+facet_grid(sites ~ .) + xlab("Data and Time") +
ylab("Rainfall Amount (count/epoch)") +
ggtitle("Fitted cutoffs with seasonality at eight locations")
ggsave(filename=here("results","ut.pdf"), plot=utfit, width = 6, height = 5)
#ggsave(filename="/Users/liy0h/Dropbox/My Research/rainfall paper/Paper ARmodel/ut.jpeg", plot=utfit, width = 8, height = 6.5)
rain.ut <- rain.long[-(1:8)*28801,]
rain.ut$rain <- melt(ut)$value
utfit<-ggplot(rain.ut,aes(y=rain,x=dt,group=sites,colour=sites))+
geom_line()+facet_grid(sites ~ .) + xlab("Data and Time") +
ylab("Rainfall Amount (count/epoch)") +
ggtitle("Fitted cutoffs with seasonality at eight locations")
ggsave(filename=here("results","ut.pdf"), plot=utfit, width = 11, height = 9)
#ggsave(filename="/Users/liy0h/Dropbox/My Research/rainfall paper/Paper ARmodel/ut.jpeg", plot=utfit, width = 8, height = 6.5)
histraw <- ggplot(rain.long,aes(rain))+geom_histogram(binwidth=.5)+ scale_y_sqrt() + xlab("Rainfall Amount") + ylab("Frequency") + ggtitle("(a) Histograms of the Rainfall Data")
ggsave(filename=here("results","histraw.jpeg"), plot=histraw, width = 4, height = 4)
ggsave(filename="/Users/liy0h/Dropbox/My Research/rainfall paper/Paper ARmodel/histraw.jpeg", plot=histraw, width = 4, height = 4)
qqraw <- ggplot(rain.long, aes(sample=rain))+ stat_qq()+geom_abline(slope=1, intercept=0)+ggtitle("(b) Normal QQ plot of the Rainfall Data")
ggsave(filename=here("results","qqraw.jpeg"), plot=qqraw, width = 4, height = 4)
ggsave(filename="/Users/liy0h/Dropbox/My Research/rainfall paper/Paper ARmodel/qqraw.jpeg", plot=qqraw, width = 4, height = 4)
histraw <- ggplot(rain.long,aes(rain))+geom_histogram(binwidth=.5)+ scale_y_sqrt() + xlab("Rainfall Amount") + ylab("Frequency") + ggtitle("(a) Histograms of the Rainfall Data")
ggsave(filename=here("results","histraw.jpeg"), plot=histraw, width = 6, height = 5)
ggsave(filename="/Users/liy0h/Dropbox/My Research/rainfall paper/Paper ARmodel/histraw.jpeg", plot=histraw, width = 6, height = 5)
qqraw <- ggplot(rain.long, aes(sample=rain))+ stat_qq()+geom_abline(slope=1, intercept=0)+ggtitle("(b) Normal QQ plot of the Rainfall Data")
ggsave(filename=here("results","qqraw.jpeg"), plot=qqraw, width = 6, height = 5)
ggsave(filename="/Users/liy0h/Dropbox/My Research/rainfall paper/Paper ARmodel/qqraw.jpeg", plot=qqraw, width = 6, height = 5)
p2 <- ggplot(spat.dep,aes(group=variable,fill=variable)) +
geom_histogram(aes(value),binwidth=.5,position = position_dodge())+
scale_y_sqrt()+
xlab("Number of simutaneously rainy locations")+
ylab("Count")+
ggtitle("Histogram of Simutaneous Rain")
p2
ggsave(filename=here("results","spatial.pdf"),device='pdf', plot=p2,width = 6, height = 5)
p2 <- ggplot(spat.dep,aes(group=variable,fill=variable)) +
geom_histogram(aes(value),binwidth=.5,position = position_dodge())+
xlab("Number of simutaneously rainy locations")+
ylab("Count")+
ggtitle("Histogram of Simutaneous Rain")
p2
p2 <- ggplot(spat.dep,aes(group=variable,fill=variable)) +
geom_histogram(aes(value),binwidth=.5,position = position_dodge())+
xlab("Number of simutaneously rainy locations")+
ylab("Count")+
ggtitle("Histogram of Simutaneous Rain")
p2
ggsave(filename=here("results","spatial.pdf"),device='pdf', plot=p2,width = 6, height = 5)
par(mfrow=c(1,2))
plot(density(condi.prob[3,]),main='Wet|Dry',xlab="Transition probability",xlim=c(0,0.5),lwd=2,col=2)
abline(v=condi.prob.norm[3],col=3,lwd=2,lty=2)
abline(v=condi.prob.real[3],col=1,lwd=2,lty=2)
legend("topright",c("Observation","Simulation"),col=c(1,2),lwd=2)
plot(density(1-condi.prob[1,]),main='Wet|Wet',xlab="Transition probability",xlim=c(0.5,1),lwd=2,col=2)
abline(v=1-condi.prob.norm[1],col=3,lwd=2,lty=2)
abline(v=1-condi.prob.real[1],col=1,lwd=2,lty=2)
legend("topleft",c("Observation","Simulation"),col=c(1,2),lwd=2)
par(mfrow=c(1,2))
plot(density(condi.prob[3,]),main='Wet|Dry',xlab="Transition probability",xlim=c(0,0.5),lwd=2,col=2)
abline(v=condi.prob.norm[3],col=3,lwd=2,lty=2)
abline(v=condi.prob.real[3],col=1,lwd=2,lty=2)
legend("topright",c("Observation","Simulation"),col=c(1,2),lwd=2)
plot(density(1-condi.prob[1,]),main='Wet|Wet',xlab="Transition probability",xlim=c(0.5,1),lwd=2,col=2)
abline(v=1-condi.prob.norm[1],col=3,lwd=2,lty=2)
abline(v=1-condi.prob.real[1],col=1,lwd=2,lty=2)
legend("topleft",c("Observation","Simulation"),col=c(1,2),lwd=2)
par(mfrow=c(1,2))
plot(density(condi.prob[3,]),main='Wet|Dry',xlab="Transition probability",xlim=c(0,0.5),lwd=2,col=2)
abline(v=condi.prob.norm[3],col=3,lwd=2,lty=2)
abline(v=condi.prob.real[3],col=1,lwd=2,lty=2)
legend("topright",c("Observation","Simulation"),col=c(1,2),lwd=2)
plot(density(1-condi.prob[1,]),main='Wet|Wet',xlab="Transition probability",xlim=c(0.5,1),lwd=2,col=2)
abline(v=1-condi.prob.norm[1],col=3,lwd=2,lty=2)
abline(v=1-condi.prob.real[1],col=1,lwd=2,lty=2)
legend("topleft",c("Observation","Simulation",""),col=c(1,2,3),lwd=2)
par(mfrow=c(1,2))
plot(density(condi.prob[3,]),main='Wet|Dry',xlab="Transition probability",xlim=c(0,0.5),lwd=2,col=2)
lines(condi.prob.norm[3],col=3,lwd=2,lty=2)
abline(v=condi.prob.real[3],col=1,lwd=2,lty=2)
legend("topright",c("Observation","Simulation"),col=c(1,2),lwd=2)
plot(density(1-condi.prob[1,]),main='Wet|Wet',xlab="Transition probability",xlim=c(0.5,1),lwd=2,col=2)
lines(1-condi.prob.norm[1],col=3,lwd=2,lty=2)
abline(v=1-condi.prob.real[1],col=1,lwd=2,lty=2)
legend("topleft",c("Observation","Simulation",""),col=c(1,2,3),lwd=2)
par(mfrow=c(1,2))
plot(density(condi.prob[3,]),main='Wet|Dry',xlab="Transition probability",xlim=c(0,0.5),lwd=2,col=2)
plot(condi.prob.norm[3],col=3,lwd=2,lty=2,add=TRUE)
abline(v=condi.prob.real[3],col=1,lwd=2,lty=2)
legend("topright",c("Observation","Simulation"),col=c(1,2),lwd=2)
plot(density(1-condi.prob[1,]),main='Wet|Wet',xlab="Transition probability",xlim=c(0.5,1),lwd=2,col=2)
lines(1-condi.prob.norm[1],col=3,lwd=2,lty=2)
abline(v=1-condi.prob.real[1],col=1,lwd=2,lty=2)
legend("topleft",c("Observation","Simulation",""),col=c(1,2,3),lwd=2)
par(mfrow=c(1,2))
plot(density(condi.prob[3,]),main='Wet|Dry',xlab="Transition probability",xlim=c(0,0.5),lwd=2,col=2)
lines(density(condi.prob.norm[3,]),col=3,lwd=2,lty=2)
abline(v=condi.prob.real[3],col=1,lwd=2,lty=2)
legend("topright",c("Observation","Simulation"),col=c(1,2),lwd=2)
plot(density(1-condi.prob[1,]),main='Wet|Wet',xlab="Transition probability",xlim=c(0.5,1),lwd=2,col=2)
lines(1-condi.prob.norm[1],col=3,lwd=2,lty=2)
abline(v=1-condi.prob.real[1],col=1,lwd=2,lty=2)
legend("topleft",c("Observation","Simulation",""),col=c(1,2,3),lwd=2)
par(mfrow=c(1,2))
plot(density(condi.prob[3,]),main='Wet|Dry',xlab="Transition probability",xlim=c(0,0.5),lwd=2,col=2)
lines(density(condi.prob.norm[3,]),col=3,lwd=2,lty=2)
abline(v=condi.prob.real[3],col=1,lwd=2,lty=2)
legend("topright",c("Truth","Skew-t","Gaussian"),col=c(1,2,3),lwd=2)
plot(density(1-condi.prob[1,]),main='Wet|Wet',xlab="Transition probability",xlim=c(0.5,1),lwd=2,col=2)
lines(density(condi.prob.norm[1,]),col=3,lwd=2,lty=2)
abline(v=1-condi.prob.real[1],col=1,lwd=2,lty=2)
legend("topleft",c("Truth","Skew-t","Gaussian"),col=c(1,2,3),lwd=2)
par(mfrow=c(1,2))
plot(density(condi.prob[3,]),main='Wet|Dry',xlab="Transition probability",xlim=c(0,0.5),lwd=2,col=2)
lines(density(condi.prob.norm[3,]),col=3,lwd=2,lty=2)
abline(v=condi.prob.real[3],col=1,lwd=2,lty=2)
legend("topright",c("Truth","Skew-t","Gaussian"),col=c(1,2,3),lwd=2)
plot(density(1-condi.prob[1,]),main='Wet|Wet',xlab="Transition probability",xlim=c(0.5,1),lwd=2,col=2)
lines(1-density(condi.prob.norm[1,]),col=3,lwd=2,lty=2)
par(mfrow=c(1,2))
plot(density(condi.prob[3,]),main='Wet|Dry',xlab="Transition probability",xlim=c(0,0.5),lwd=2,col=2)
lines(density(condi.prob.norm[3,]),col=3,lwd=2,lty=2)
abline(v=condi.prob.real[3],col=1,lwd=2,lty=2)
legend("topright",c("Truth","Skew-t","Gaussian"),col=c(1,2,3),lwd=2)
plot(density(1-condi.prob[1,]),main='Wet|Wet',xlab="Transition probability",xlim=c(0.5,1),lwd=2,col=2)
lines(density(1-condi.prob.norm[1,]),col=3,lwd=2,lty=2)
abline(v=1-condi.prob.real[1],col=1,lwd=2,lty=2)
legend("topleft",c("Truth","Skew-t","Gaussian"),col=c(1,2,3),lwd=2)
par(mfrow=c(1,2))
plot(density(condi.prob[3,]),main='Wet|Dry',xlab="Transition probability",xlim=c(0,0.2),lwd=2,col=2)
lines(density(condi.prob.norm[3,]),col=3,lwd=2,lty=2)
abline(v=condi.prob.real[3],col=1,lwd=2,lty=2)
legend("topright",c("Truth","Skew-t","Gaussian"),col=c(1,2,3),lwd=2)
plot(density(1-condi.prob[1,]),main='Wet|Wet',xlab="Transition probability",xlim=c(0.8,1),lwd=2,col=2)
lines(density(1-condi.prob.norm[1,]),col=3,lwd=2,lty=2)
abline(v=1-condi.prob.real[1],col=1,lwd=2,lty=2)
legend("topleft",c("Truth","Skew-t","Gaussian"),col=c(1,2,3),lwd=2)
par(mfrow=c(1,2))
plot(density(condi.prob[3,]),main='Wet|Dry',xlab="Transition probability",xlim=c(0,0.5),lwd=2,col=2)
lines(density(condi.prob.norm[3,]),col=3,lwd=2,lty=2)
abline(v=condi.prob.real[3],col=1,lwd=2,lty=2)
legend("topright",c("Truth","Skew-t","Gaussian"),col=c(1,2,3),lwd=2)
plot(density(1-condi.prob[1,]),main='Wet|Wet',xlab="Transition probability",xlim=c(0.5,1),lwd=2,col=2)
lines(density(1-condi.prob.norm[1,]),col=3,lwd=2,lty=2)
abline(v=1-condi.prob.real[1],col=1,lwd=2,lty=2)
legend("topleft",c("Truth","Skew-t","Gaussian"),col=c(1,2,3),lwd=2)
pdf("condidry.pdf",width=12, height=10)
par(mfrow=c(1,2))
plot(density(condi.prob[3,]),main='Wet|Dry',xlab="Transition probability",xlim=c(0,0.5),lwd=2,col=2)
lines(density(condi.prob.norm[3,]),col=3,lwd=2,lty=2)
abline(v=condi.prob.real[3],col=1,lwd=2,lty=2)
legend("topright",c("Truth","Skew-t","Gaussian"),col=c(1,2,3),lwd=2)
plot(density(1-condi.prob[1,]),main='Wet|Wet',xlab="Transition probability",xlim=c(0.5,1),lwd=2,col=2)
lines(density(1-condi.prob.norm[1,]),col=3,lwd=2,lty=2)
abline(v=1-condi.prob.real[1],col=1,lwd=2,lty=2)
legend("topleft",c("Truth","Skew-t","Gaussian"),col=c(1,2,3),lwd=2)
dev.off()
pdf("condidry.pdf",width=6, height=5)
par(mfrow=c(1,2))
plot(density(condi.prob[3,]),main='Wet|Dry',xlab="Transition probability",xlim=c(0,0.5),lwd=2,col=2)
lines(density(condi.prob.norm[3,]),col=3,lwd=2,lty=2)
abline(v=condi.prob.real[3],col=1,lwd=2,lty=2)
legend("topright",c("Truth","Skew-t","Gaussian"),col=c(1,2,3),lwd=2)
plot(density(1-condi.prob[1,]),main='Wet|Wet',xlab="Transition probability",xlim=c(0.5,1),lwd=2,col=2)
lines(density(1-condi.prob.norm[1,]),col=3,lwd=2,lty=2)
abline(v=1-condi.prob.real[1],col=1,lwd=2,lty=2)
legend("topleft",c("Truth","Skew-t","Gaussian"),col=c(1,2,3),lwd=2)
dev.off()
pdf("condidry.pdf",width=10, height=5)
par(mfrow=c(1,2))
plot(density(condi.prob[3,]),main='Wet|Dry',xlab="Transition probability",xlim=c(0,0.5),lwd=2,col=2)
lines(density(condi.prob.norm[3,]),col=3,lwd=2,lty=2)
abline(v=condi.prob.real[3],col=1,lwd=2,lty=2)
legend("topright",c("Truth","Skew-t","Gaussian"),col=c(1,2,3),lwd=2)
plot(density(1-condi.prob[1,]),main='Wet|Wet',xlab="Transition probability",xlim=c(0.5,1),lwd=2,col=2)
lines(density(1-condi.prob.norm[1,]),col=3,lwd=2,lty=2)
abline(v=1-condi.prob.real[1],col=1,lwd=2,lty=2)
legend("topleft",c("Truth","Skew-t","Gaussian"),col=c(1,2,3),lwd=2)
dev.off()
pdf("condidry.pdf",width=10, height=5)
par(mfrow=c(1,2))
plot(density(condi.prob[3,]),main='Wet|Dry',xlab="Transition probability",xlim=c(0,0.5),lwd=2,col=2)
lines(density(condi.prob.norm[3,]),col=3,lwd=2,lty=2)
abline(v=condi.prob.real[3],col=1,lwd=2,lty=2)
legend("topright",c("Truth","Skew-t","Gaussian"),col=c(1,2,3),lty=c(2,1,1))
plot(density(1-condi.prob[1,]),main='Wet|Wet',xlab="Transition probability",xlim=c(0.5,1),lwd=2,col=2)
lines(density(1-condi.prob.norm[1,]),col=3,lwd=2,lty=2)
abline(v=1-condi.prob.real[1],col=1,lwd=2,lty=2)
legend("topleft",c("Truth","Skew-t","Gaussian"),col=c(1,2,3),lwd=2,lty=c(2,1,1))
dev.off()
pdf("condidry.pdf",width=10, height=5)
par(mfrow=c(1,2))
plot(density(condi.prob[3,]),main='Wet|Dry',xlab="Transition probability",xlim=c(0,0.5),lwd=2,col=2)
lines(density(condi.prob.norm[3,]),col=3,lwd=2,lty=2)
abline(v=condi.prob.real[3],col=1,lwd=2,lty=2)
legend("topright",c("Truth","Skew-t","Gaussian"),lwd=2,col=c(1,2,3),lty=c(2,1,1))
plot(density(1-condi.prob[1,]),main='Wet|Wet',xlab="Transition probability",xlim=c(0.5,1),lwd=2,col=2)
lines(density(1-condi.prob.norm[1,]),col=3,lwd=2,lty=2)
abline(v=1-condi.prob.real[1],col=1,lwd=2,lty=2)
legend("topleft",c("Truth","Skew-t","Gaussian"),col=c(1,2,3),lwd=2,lty=c(2,1,1))
dev.off()
ggsave(filename=here("results","length.pdf"),device='pdf', plot=p.cons,width = 6, height = 5)
p.cons <- ggplot(data = quan.cons, aes(x=x, y=median, colour=Type)) +
geom_line(size=0.8) + ylab("Empirical Quantiles (count/epoch)") + xlab("Sample Quantiles (count/epoch)") +
ggtitle("The QQ-plot of the dry spell length") +
scale_y_continuous()+scale_x_continuous()+
geom_ribbon(aes(ymin=lower, ymax=upper,fill=Type), linetype=2, alpha=0.3) +
scale_color_brewer(palette = "Dark2") +
scale_fill_brewer(palette = "Dark2")
p.cons
p.cons <- ggplot(data = quan.cons, aes(x=x, y=median, colour=Type)) +
geom_line(size=0.8) + ylab("Empirical Quantiles (count/epoch)") + xlab("Sample Quantiles (count/epoch)") +
ggtitle("The QQ-plot of the dry spell length") +
scale_y_continuous()+scale_x_continuous()+
geom_ribbon(aes(ymin=lower, ymax=upper,fill=Type), linetype=2, alpha=0.3) +
scale_color_brewer(palette = "Dark2") +
scale_fill_brewer(palette = "Dark2")
p.cons
ggsave(filename=here("results","length.pdf"),device='pdf', plot=p.cons,width = 6, height = 5)
w.cons<-rle(c(raindata>0))
w.mattovec<-apply(app.sim>0,3,c)
w.mattovec.norm<-apply(app.sim.norm>0,3,c)
w.cons2<-apply(w.mattovec,2,rle)
w.cons2.norm<-apply(w.mattovec.norm,2,rle)
w.quan.cons<-w.quan.cons.norm<-matrix(0,niters,10000)
for (j in 1 :niters){
w.quan.cons[j,]<- quantile(w.cons2[[j]]$length[w.cons2[[j]]$values>0],1:10000/10000,type = 6)
w.quan.cons.norm[j,]<-quantile(w.cons2.norm[[j]]$length[w.cons2[[j]]$values>0],1:10000/10000,type = 6)
w.quan.cons.true<- quantile(w.cons$length[cons$values>0],1:10000/10000,type = 6)
}
w.cons<-rle(c(raindata>0))
w.mattovec<-apply(app.sim>0,3,c)
w.mattovec.norm<-apply(app.sim.norm>0,3,c)
w.cons2<-apply(w.mattovec,2,rle)
w.cons2.norm<-apply(w.mattovec.norm,2,rle)
w.quan.cons<-w.quan.cons.norm<-matrix(0,niters,10000)
for (j in 1 :niters){
w.quan.cons[j,]<- quantile(w.cons2[[j]]$length[w.cons2[[j]]$values==TRUE],1:10000/10000,type = 6)
w.quan.cons.norm[j,]<-quantile(w.cons2.norm[[j]]$length[w.cons2[[j]]$values==TRUE],1:10000/10000,type = 6)
w.quan.cons.true<- quantile(w.cons$length[cons$values==TRUE],1:10000/10000,type = 6)
}
cons<-rle(c(raindata))
mattovec<-apply(app.sim,3,c)
mattovec.norm<-apply(app.sim.norm,3,c)
cons2<-apply(mattovec,2,rle)
cons2.norm<-apply(mattovec.norm,2,rle)
quan.cons<-quan.cons.norm<-matrix(0,niters,10000)
for (j in 1 :niters){
quan.cons[j,]<- quantile(cons2[[j]]$length[cons2[[j]]$values==0],1:10000/10000,type = 6)
quan.cons.norm[j,]<-quantile(cons2.norm[[j]]$length[cons2.norm[[j]]$values==0],1:10000/10000,type = 6)
quan.cons.true<- quantile(cons$length[cons$values==0],1:10000/10000,type = 6)
}
quan.cons<-data.frame(x=rep(quan.cons.true,3),median=c(apply(quan.cons,2,sort)[26,],apply(quan.cons.norm,2,sort)[26,],quan.cons.true),lower=c(apply(quan.cons,2,sort)[2,],apply(quan.cons.norm,2,sort)[2,],rep(NA,10000)),upper=c(apply(quan.cons,2,sort)[49,],apply(quan.cons.norm,2,sort)[49,],rep(NA,10000)),Type=c(rep("Skew-t",10000),rep("Gaussian",10000),rep("Truth",10000)))
w.cons<-rle(c(raindata>0))
w.mattovec<-apply(app.sim>0,3,c)
w.mattovec.norm<-apply(app.sim.norm>0,3,c)
w.cons2<-apply(w.mattovec,2,rle)
w.cons2.norm<-apply(w.mattovec.norm,2,rle)
w.quan.cons<-w.quan.cons.norm<-matrix(0,niters,10000)
for (j in 1 :niters){
w.quan.cons[j,]<- quantile(w.cons2[[j]]$length[w.cons2[[j]]$values==TRUE],1:10000/10000,type = 6)
w.quan.cons.norm[j,]<-quantile(w.cons2.norm[[j]]$length[w.cons2.norm[[j]]$values==TRUE],1:10000/10000,type = 6)
w.quan.cons.true<- quantile(w.cons$length[cons$values==TRUE],1:10000/10000,type = 6)
}
w.cons<-rle(c(raindata>0))
w.mattovec<-apply(app.sim>0,3,c)
w.mattovec.norm<-apply(app.sim.norm>0,3,c)
w.cons2<-apply(w.mattovec,2,rle)
w.cons2.norm<-apply(w.mattovec.norm,2,rle)
w.quan.cons<-w.quan.cons.norm<-matrix(0,niters,10000)
for (j in 1 :niters){
w.quan.cons[j,]<- quantile(w.cons2[[j]]$length[w.cons2[[j]]$values==TRUE],1:10000/10000,type = 6)
w.quan.cons.norm[j,]<-quantile(w.cons2.norm[[j]]$length[w.cons2.norm[[j]]$values==TRUE],1:10000/10000,type = 6)
w.quan.cons.true<- quantile(w.cons$length[w.cons$values==TRUE],1:10000/10000,type = 6)
}
w.quan.cons<-data.frame(x=rep(w.quan.cons.true,3),median=c(apply(w.quan.cons,2,sort)[26,],apply(w.quan.cons.norm,2,sort)[26,],w.quan.cons.true),lower=c(apply(w.quan.cons,2,sort)[2,],apply(w.quan.cons.norm,2,sort)[2,],rep(NA,10000)),upper=c(apply(w.quan.cons,2,sort)[49,],apply(w.quan.cons.norm,2,sort)[49,],rep(NA,10000)),Type=c(rep("Skew-t",10000),rep("Gaussian",10000),rep("Truth",10000)))
p.cons <- ggplot(data = quan.cons, aes(x=x, y=median, colour=Type)) +
geom_line(size=0.8) + ylab("Empirical Quantiles (count/epoch)") + xlab("Sample Quantiles (count/epoch)") +
ggtitle("The QQ-plot of the dry spell length") +
scale_y_continuous()+scale_x_continuous()+
geom_ribbon(aes(ymin=lower, ymax=upper,fill=Type), linetype=2, alpha=0.3) +
scale_color_brewer(palette = "Dark2") +
scale_fill_brewer(palette = "Dark2")
p.cons
w.p.cons <- ggplot(data = w.quan.cons, aes(x=x, y=median, colour=Type)) +
geom_line(size=0.8) + ylab("Empirical Quantiles (count/epoch)") + xlab("Sample Quantiles (count/epoch)") +
ggtitle("The QQ-plot of the wet spell length") +
scale_y_continuous()+scale_x_continuous()+
geom_ribbon(aes(ymin=lower, ymax=upper,fill=Type), linetype=2, alpha=0.3) +
scale_color_brewer(palette = "Dark2") +
scale_fill_brewer(palette = "Dark2")
w.p.cons
ggsave(filename=here("results","wetlength.pdf"),device='pdf', plot=w.p.cons,width = 6, height = 5)
ggsave(filename=here("results","length.pdf"),device='pdf', plot=p.cons,width = 6, height = 5)
condi.prob
apply(condi.prob,1,mean)
table((app.sim[-1,,i]>0)-(app.sim[-NT,,i]>0))/(NT*NS)
wcd<-apply(condi.prob,1,mean)[3]
dcd<-1-apply(condi.prob,1,mean)[3]
wcw<-1-apply(condi.prob,1,mean)[1]
dcw<-apply(condi.prob,1,mean)[1]
c(wcw,wcd,wcd,dcw)
wcd.r<-apply(condi.prob.real,1,mean)[3]
dcd.r<-1-apply(condi.prob.real,1,mean)[3]
wcw.r<-1-apply(condi.prob.real,1,mean)[1]
dcw.r<-apply(condi.prob.real,1,mean)[1]
c(wcw.r,wcd.r,wcd.r,dcw.r)
wcd<-apply(condi.prob,1,mean)[3]
dcd<-1-apply(condi.prob,1,mean)[3]
wcw<-1-apply(condi.prob,1,mean)[1]
dcw<-apply(condi.prob,1,mean)[1]
round(c(wcw,wcd,wcd,dcw),3)
wcd.r<-apply(condi.prob.real,1,mean)[3]
dcd.r<-1-apply(condi.prob.real,1,mean)[3]
wcw.r<-1-apply(condi.prob.real,1,mean)[1]
dcw.r<-apply(condi.prob.real,1,mean)[1]
round(c(wcw.r,wcd.r,wcd.r,dcw.r),3)
apply(condi.prob,1,mean)
wcd<-apply(condi.prob,1,mean)[3]
dcd<-1-apply(condi.prob,1,mean)[3]
wcw<-1-apply(condi.prob,1,mean)[1]
dcw<-apply(condi.prob,1,mean)[1]
round(c(wcw,dcw,wcw,wcd),3)
wcd.r<-apply(condi.prob.real,1,mean)[3]
dcd.r<-1-apply(condi.prob.real,1,mean)[3]
wcw.r<-1-apply(condi.prob.real,1,mean)[1]
dcw.r<-apply(condi.prob.real,1,mean)[1]
round(c(wcw.r,wcd.r,wcd.r,wcd.r),3)
round(c(wcw.r,dcw.r,wcd.r,wcd.r),3)
wcd<-apply(condi.prob,1,mean)[3]
dcd<-1-apply(condi.prob,1,mean)[3]
wcw<-1-apply(condi.prob,1,mean)[1]
dcw<-apply(condi.prob,1,mean)[1]
round(c(wcw,dcw,wcd,dcd),3)
wcd.r<-apply(condi.prob.real,1,mean)[3]
dcd.r<-1-apply(condi.prob.real,1,mean)[3]
wcw.r<-1-apply(condi.prob.real,1,mean)[1]
dcw.r<-apply(condi.prob.real,1,mean)[1]
round(c(wcw.r,dcw.r,wcd.r,dcd.r),3)
apply(condi.prob,1,sd)[3]
# Mode <- function(x, na.rm = FALSE) {
#   if(na.rm){
#     x = x[!is.na(x)]
#   }
#
#   ux <- unique(x)
#   return(ux[which.max(tabulate(match(x, ux)))])
# }
simutan<-apply(y.st,1,function(x){sum(x>0)})
#simutan.norm<-apply(y.norm,1,function(x){sum(x>0)})
simutan.true<-apply(raindata,1,function(x){sum(x>0)})
spat.dep <- melt(data.frame(Truth=simutan.true,"Skew-t" = simutan, Gaussian = simutan.norm))
# Mode <- function(x, na.rm = FALSE) {
#   if(na.rm){
#     x = x[!is.na(x)]
#   }
#
#   ux <- unique(x)
#   return(ux[which.max(tabulate(match(x, ux)))])
# }
simutan<-apply(y.st,1,function(x){sum(x>0)})
#simutan.norm<-apply(y.norm,1,function(x){sum(x>0)})
simutan.true<-apply(raindata,1,function(x){sum(x>0)})
spat.dep <- melt(data.frame(Truth=simutan.true,"Skew-t" = simutan))
p2 <- ggplot(spat.dep,aes(group=variable,fill=variable)) +
geom_histogram(aes(value),binwidth=.5,position = position_dodge())+
xlab("Number of simutaneously rainy locations")+
ylab("Count")+
ggtitle("Histogram of Simutaneous Rain")
p2
ggsave(filename=here("results","spatial.pdf"),device='pdf', plot=p2,width = 6, height = 5)
cons<-rle(c(raindata))
mattovec<-apply(app.sim,3,c)
mattovec.norm<-apply(app.sim.norm,3,c)
cons2<-apply(mattovec,2,rle)
cons2.norm<-apply(mattovec.norm,2,rle)
quan.cons<-quan.cons.norm<-matrix(0,niters,10000)
for (j in 1 :niters){
quan.cons[j,]<- quantile(cons2[[j]]$length[cons2[[j]]$values==0],1:10000/10000,type = 6)
#quan.cons.norm[j,]<-quantile(cons2.norm[[j]]$length[cons2.norm[[j]]$values==0],1:10000/10000,type = 6)
quan.cons.true<- quantile(cons$length[cons$values==0],1:10000/10000,type = 6)
}
quan.cons<-data.frame(x=rep(quan.cons.true,3),median=c(apply(quan.cons,2,sort)[26,],quan.cons.true),lower=c(apply(quan.cons,2,sort)[2,],rep(NA,10000)),upper=c(apply(quan.cons,2,sort)[49,],rep(NA,10000)),Type=c(rep("Skew-t",10000),rep("Truth",10000)))
cons<-rle(c(raindata))
mattovec<-apply(app.sim,3,c)
mattovec.norm<-apply(app.sim.norm,3,c)
cons2<-apply(mattovec,2,rle)
cons2.norm<-apply(mattovec.norm,2,rle)
quan.cons<-quan.cons.norm<-matrix(0,niters,10000)
for (j in 1 :niters){
quan.cons[j,]<- quantile(cons2[[j]]$length[cons2[[j]]$values==0],1:10000/10000,type = 6)
#quan.cons.norm[j,]<-quantile(cons2.norm[[j]]$length[cons2.norm[[j]]$values==0],1:10000/10000,type = 6)
quan.cons.true<- quantile(cons$length[cons$values==0],1:10000/10000,type = 6)
}
quan.cons<-data.frame(x=rep(quan.cons.true,2),median=c(apply(quan.cons,2,sort)[26,],quan.cons.true),lower=c(apply(quan.cons,2,sort)[2,],rep(NA,10000)),upper=c(apply(quan.cons,2,sort)[49,],rep(NA,10000)),Type=c(rep("Skew-t",10000),rep("Truth",10000)))
w.cons<-rle(c(raindata>0))
w.mattovec<-apply(app.sim>0,3,c)
w.mattovec.norm<-apply(app.sim.norm>0,3,c)
w.cons2<-apply(w.mattovec,2,rle)
w.cons2.norm<-apply(w.mattovec.norm,2,rle)
w.quan.cons<-w.quan.cons.norm<-matrix(0,niters,10000)
for (j in 1 :niters){
w.quan.cons[j,]<- quantile(w.cons2[[j]]$length[w.cons2[[j]]$values==TRUE],1:10000/10000,type = 6)
w.quan.cons.norm[j,]<-quantile(w.cons2.norm[[j]]$length[w.cons2.norm[[j]]$values==TRUE],1:10000/10000,type = 6)
w.quan.cons.true<- quantile(w.cons$length[w.cons$values==TRUE],1:10000/10000,type = 6)
}
w.quan.cons<-data.frame(x=rep(w.quan.cons.true,2),median=c(apply(w.quan.cons,2,sort)[26,],w.quan.cons.true),lower=c(apply(w.quan.cons,2,sort)[2,],rep(NA,10000)),upper=c(apply(w.quan.cons,2,sort)[49,],rep(NA,10000)),Type=c(rep("Skew-t",10000),rep("Gaussian",10000),rep("Truth",10000)))
w.quan.cons<-data.frame(x=rep(w.quan.cons.true,2),median=c(apply(w.quan.cons,2,sort)[26,],w.quan.cons.true),lower=c(apply(w.quan.cons,2,sort)[2,],rep(NA,10000)),upper=c(apply(w.quan.cons,2,sort)[49,],rep(NA,10000)),Type=c(rep("Skew-t",10000),rep("Truth",10000)))
p.cons <- ggplot(data = quan.cons, aes(x=x, y=median, colour=Type)) +
geom_line(size=0.8) + ylab("Empirical Quantiles (count/epoch)") + xlab("Sample Quantiles (count/epoch)") +
ggtitle("The QQ-plot of the dry spell length") +
scale_y_continuous()+scale_x_continuous()+
geom_ribbon(aes(ymin=lower, ymax=upper,fill=Type), linetype=2, alpha=0.3) +
scale_color_brewer(palette = "Dark2") +
scale_fill_brewer(palette = "Dark2")
p.cons
w.p.cons <- ggplot(data = w.quan.cons, aes(x=x, y=median, colour=Type)) +
geom_line(size=0.8) + ylab("Empirical Quantiles (count/epoch)") + xlab("Sample Quantiles (count/epoch)") +
ggtitle("The QQ-plot of the wet spell length") +
scale_y_continuous()+scale_x_continuous()+
geom_ribbon(aes(ymin=lower, ymax=upper,fill=Type), linetype=2, alpha=0.3) +
scale_color_brewer(palette = "Dark2") +
scale_fill_brewer(palette = "Dark2")
w.p.cons
ggsave(filename=here("results","wetlength.pdf"),device='pdf', plot=w.p.cons,width = 6, height = 5)
ggsave(filename=here("results","length.pdf"),device='pdf', plot=p.cons,width = 6, height = 5)
