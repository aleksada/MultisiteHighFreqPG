"0","sims <- function(NT,NS,sigma21,beta1,b0,b1,alpha,nu){"
"0","   error.sim <- matrix(0,NT,NS)"
"0","   dist <- matrix(data = 0, nrow = NS, ncol = NS) # The distances between locations"
"0","    for (i in 1:NS) {"
"0","        for (j in 1:NS) {"
"0","            dist[i,j] <- sqrt((coord[i,2]-coord[j,2])^2+(coord[i,3]-coord[j,3])^2)   "
"0","        }"
"0","    }"
"0","    B1 <-  sigma21 * exp(-  dist/beta1)"
"0","    set.seed(1)"
"0","    for(s in 1 :NS){"
"0","        nu <- nu"
"0","        bvdelta <- sqrt(nu) * gamma(1/2 * (nu - 1))/sqrt(pi)/gamma(1/2 * nu) * "
"0","            alpha/sqrt(1 + alpha^2)"
"0","        omega <- 1/sqrt((nu/(nu-2) - bvdelta^2))"
"0","        xi<- -omega * bvdelta"
"0","        error.sim[,s] <- rst(NT, xi = xi, omega = omega, alpha=alpha, nu=nu)"
"0","    }"
"0","    y.sim <- matrix(0,NT,NS)"
"0","    ut.sim <- ut[seq(1,28800,28800/NT),1:NS]"
"0","    for(t in 2: NT){"
"0","        y.sim[t,] <- B1 %*% y.sim[t - 1,] + error.sim[t,] * (b0 + b1 * mean(y.sim[t - 1,]))"
"0","        y.sim[t,] <- ifelse(y.sim[t,] > ut.sim[t,], y.sim[t,], 0)"
"0","    } "
"0","    return(list(y.sim = y.sim, error.sim = error.sim))"
"0","}"
