"0","nsims.app <- function(NT,NS,sigma21,beta1,b0,b1,alpha,nu,niters,true){"
"0","    error <- array(0,c(NT,NS,niters))"
"0","    y <- array(0,c(NT,NS,niters))"
"0","    dist <- matrix(data = 0, nrow = NS, ncol = NS) # The distances between locations"
"0","    for (i in 1:NS) {"
"0","        for (j in 1:NS) {"
"0","            dist[i,j] <- sqrt((coord[i,2]-coord[j,2])^2+(coord[i,3]-coord[j,3])^2)   "
"0","        }"
"0","    }"
"0","    B1 <-  sigma21 * matern(dist,beta1,1)"
"0","    for(iter in 1: niters){"
"0","        for(s in 1 :NS){"
"0","            nu <- nu"
"0","            bvdelta <- sqrt(nu) * gamma(1/2 * (nu - 1))/sqrt(pi)/gamma(1/2 * nu) * "
"0","            alpha/sqrt(1 + alpha^2)"
"0","            omega <- 1/sqrt((nu/(nu-2) - bvdelta^2))"
"0","            xi<- -omega * bvdelta"
"0","            error[,s,iter] <- rst(NT, xi = xi, omega = omega, alpha, nu)"
"0","        }"
"0","        for(t in 2: NT){"
"0","        y[t,,iter] <- B1 %*% true[t - 1,] + "
"0","                            error[t,,iter] * (b0 + b1 * mean(true[t - 1,]))"
"0","        y[t,,iter] <- ifelse(y[t,,iter] > ut[t,], y[t,,iter], 0)"
"0","        }"
"0","    }"
"0","    return(y)"
"0","}"
